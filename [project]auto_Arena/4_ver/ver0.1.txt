<<<<<<< HEAD
[숫자인식 기능 ver0.1]

[모델]
	[cnn_v2.h5] - MNIST 데이터셋
	[cnn_v3.h5] - 쿠키런 킹덤 폰트 숫자 데이터셋
	[cnn_v4.h5] - 쿠키런 킹덤 폰트 + MNIST 숫자 데이터셋
[진행 순서]
1. 데이터 만들기( 특징벡터, 레이블 ) 
	- MNIST 데이터 셋 전이학습 x
	- 쿠키런 킹덤 폰트를 캡처하여 데이터 셋 구성 x
	- MNIST + 쿠키런 킹덤 폰트 ok
	- 부류 지정 ok

2. CNN 모델 학습 및 검증
	- 학습 ok

3. 예측 및 성능 측정(혼동 행렬 이용10x10)
	- 90% 이하일 시 2단계 반복 ok
	- 배경만 찍힌 이미지에는 숫자 1로 인식하는 문제를 확인

4. 파이썬 GUI 디자인 설계 및 구현
	Ver0.1 시나리오
	[캡처 기능]
		1. 이미지 촬영 버튼을 누른다.
		2. 임의의 마우스 위치에서 임의의 단축키를 눌러 좌표를 찍는다.
		3. (2)의 행동을 한번 더 찍어 (x1,x2,y1,y2)를 얻고 숫자 이미지를 캡처한다.

	[전처리 기능]
		1. 얻은 이미지를 한 자릿수로 인식할 수 있도록 분할한다.
		2. 분할한 이미지들을 저장한다.
		3. 분할한 이미지들을 모델의 입력 데이터 형태로 변화하고 인식을 수행한다.

	[기록]
		1. 한 자릿수 분할한 이미지와 인식의 결과를 기록한다. ( argmax 후 .txt )
		2. 저장된 이미지와 인식 결과를 가지고 정확도 계산에 쓴다.

	
5. 실제 성능 측정
	
[진행 상황]
학습
- MNIST 데이터 셋은 과잉적합이 심해서 맞지 않음.
- 쿠키런 킹덤 폰트를 직접 다운로드하여 숫자 이미지 직접 캡처
- 캡처한 이미지를 데이터 증강으로 생성, 검증 이미지는 게임 상 숫자 캡처
- 킹덤 폰트만으로는 과잉적합이 매우 심함
- 합쳐서 학습진행, 매우 만족스러운 학습 결과가 나옴

GUI 
- GUI 디자인 및 기능 상세화
- [캡처 기능] 구현
	- 키보드 Q가 (x1, y1), W가 (x2, y2), E가 Q, W지점대로 이미지 저장
	- 정상 작동

- [전처리 기능] 구현
	- 분할된 이미지들을 상대경로로 불러오는 걸로 구현함 추후 개선 ( processingFunction 함수 ,crop 함수 이미지 경로 주의 )
	- 분할에 필요한 함수 매개변수 입력 박스를 만들어야 함
	- 분할 코드는 PIL 라이브러리를 사용함, 주의( 되도록 OpenCV 라이브러리로 통일 )
	- 정상 작동

- [예측 기능] 진행중 


- [기록] 미구현 